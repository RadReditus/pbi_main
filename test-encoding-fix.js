// –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
const { CompareService } = require('./dist/compare/compare.service');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const compareService = new CompareService();

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –∫–∞—Ä–∞–∫—É–ª—è–º–∏
const testData = [
  '¬°Yn6 √¨√ß b!!',
  '√¨√ß b!!',
  'Yn6 √¨√ß',
  'b!!',
  '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç',
  '–°–º–µ—à–∞–Ω–Ω—ã–π ¬°Yn6 √¨√ß b!! —Ç–µ–∫—Å—Ç',
  '123 –Ω–æ–º–µ',
  '01 16 —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
];

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏:');
console.log('=====================================');

testData.forEach((text, index) => {
  console.log(`\n${index + 1}. –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: "${text}"`);
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é
    const fixed = compareService.fixCyrillicEncoding(text);
    console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π: "${fixed}"`);
    
    if (text !== fixed) {
      console.log('   ‚úÖ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞');
    } else {
      console.log('   ‚ÑπÔ∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
    }
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
});

console.log('\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
